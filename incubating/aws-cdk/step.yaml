kind: step-type
version: '1.0'
metadata:
  name: cf-support/aws-cdk
  version: 1.0.0-hack
  isPublic: false
  description: Integration with AWS Cloud Development Kit.
  sources:
    - https://github.com/codefresh-io/steps/tree/master/incubating/aws-cdk
  stage: incubating
  maintainers:
    - name: Francisco Cocozza,Laurent Rochette, LUkas Goodfellow
    - email: francisco@codefresh.io, laurent.rochette@codefresh.io, lukas.goodfellow@codefresh.io
  categories:
    - utilities
    - deployment
    - build
  official: false
  tags: []
  icon:
    type: image
    url: https://cdn.jsdelivr.net/gh/codefresh-io/steps/incubating/aws-cdk/icon.png
  examples:
    - description: aws-cdk
      workflow:
        AwsCDKSynth:
          title: "Build the app"
          type: aws-cdk
          arguments:
            ARG1: TBD
            ARG2: TBD
spec:
  arguments: |-
    {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": true,
      "patterns": [],
      "required": [
        "action",
        "language"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "The CDK operation to execute. Value can be synth, bootstrap, deploy, diff, list, destroy, freestyle"
        },
        "project_dir": {
          "type": "string",
          "description": "the path where the CDK application is located"
        },
        "language": {
          "type": "string",
          "description": "The language of the applciation. Default is TypeScript"
        },
        "debug": {
          "type": "boolean",
          "description": "Add the --verbose flag if true"
        },
        "cmd_ps": {
          "type": "string",
          "description": "Additional flags to pass to the aws cdk command"
        }
      }
    }
  returns: |-
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": true,
        "patterns": [],
        "required": [
          "STATUS"
        ],
        "properties": {
            "STATUS": {
                "type": "number",
                "description": "exit code. 0 indicates success"
            },
            "STATUS_JSON_FILE": {
                "type": "string",
                "description": "The path in the Codefresh Volume to the JSON answer from the ACTION performed."
            },
            "CLOUDFORMATION_FILE": {
                "type": "string",
                "description": "The path in the Codefresh Volume to the template saved as the cdk.out JSON file."
            }
        }
    }
  steps:
    planner:
      name: aws-cdk-planner
      title: create the bash file to execute
      image: lrochette/cdk-planner:hackathon

    execute-typescript:
      name: aws-cdk-executor-typescript
      title: execute commands for Typescript
      image: lrochette/cdk-executor-typescript:hackathon
      commands:
        ./aws-cdk_script.sh
      condition:
        any:
          noLanguage: 'includes("${{language}}", "${{language}}") == true'
          TypeScript: '"${{language}}" == "TypeScript"'

    outputValues:
      name: setOutputValues
      title: Set the output values for the step
      image: alpine:latest
      commands:
        - cf_export STATUS=0
        - cf_export STATUS_JSON_FILE=/codefresh/volume/aws-cdk-result.json
        - cf_export CLOUDFORMATION_FILE=/codefresh/volume/cdk.out
  # stepsTemplate: |-
  #   aws-cdk:
  #     name: aws-cdk
  #     image: lrochette/aws-cdk
  #     environment:
  #     [[ range $key, $val := .Arguments ]]
  #       - '[[ $key ]]=[[ $val ]]'
  #     [[- end ]]
  #     commands:
  #       - env
  # delimiters:
  #   left: '[['
  #   right: ']]'
